AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Creating streaming app basic backend environment.

Globals:
  Function:
    Timeout: 60
    Runtime: python3.9
    MemorySize: 512
    CodeUri: ../../src
    Environment:
      Variables:
        table_name: !Sub "llm-chat-table"
  Api:
    OpenApiVersion: 3.0.2

Resources:
  LLMAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "llm-chat-api"
      StageName: 'test'
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./swagger.yml

  DynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "llm-chat-table"
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  GetChat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "llm-get-chat"
      Handler: llm.app.get_chat.lambda_handler
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaDynamoDBExecutionRole
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: "*"
      Events:
        API:
          Type: Api
          Properties:
            Path: /version
            Method: get
            RestApiId: !Ref LLMAPI
  
  APIPermissionToGetChat:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetChat
      Principal: apigateway.amazonaws.com
  

  PostChat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "llm-post-chat"
      Handler: llm.app.post_chat.lambda_handler
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonSageMakerFullAccess
        - AWSLambdaDynamoDBExecutionRole
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: "*"
      Events:
        API:
          Type: Api
          Properties:
            Path: /version
            Method: post
            RestApiId: !Ref LLMAPI
  
  APIPermissionToPostChat:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PostChat
      Principal: apigateway.amazonaws.com

  PutChat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "llm-put-chat"
      Handler: llm.app.put_chat.lambda_handler
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaDynamoDBExecutionRole
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: "*"
      Events:
        API:
          Type: Api
          Properties:
            Path: /version
            Method: put
            RestApiId: !Ref LLMAPI
  
  APIPermissionToPutChat:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PutChat
      Principal: apigateway.amazonaws.com

  
